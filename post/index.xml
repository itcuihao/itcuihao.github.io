<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on haoc7</title>
    <link>https://cuihao.fun/post/</link>
    <description>Recent content in Posts on haoc7</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <copyright>Copyright (c) 2018 -, haoc7; all rights reserved.</copyright>
    <lastBuildDate>Fri, 14 Apr 2023 10:34:25 +0800</lastBuildDate><atom:link href="https://cuihao.fun/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GPT Discuss Timeline</title>
      <link>https://cuihao.fun/post/gpt-discuss/</link>
      <pubDate>Fri, 14 Apr 2023 10:34:25 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/gpt-discuss/</guid>
      <description>有关GPT的讨论时间线</description>
    </item>
    
    <item>
      <title>【译】Rob Pike认为Go成功的5件事</title>
      <link>https://cuihao.fun/post/rob-pike-go-success5/</link>
      <pubDate>Tue, 30 Aug 2022 10:40:51 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/rob-pike-go-success5/</guid>
      <description>Rob Pike 认为Go成功的5件小事</description>
    </item>
    
    <item>
      <title>Elasticsearch Cluster Docker方式搭建</title>
      <link>https://cuihao.fun/post/elasticsearch-cluster/</link>
      <pubDate>Tue, 09 Aug 2022 18:49:28 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/elasticsearch-cluster/</guid>
      <description>用Docker搭建Elasticsearch Cluster</description>
    </item>
    
    <item>
      <title>要不要提前还房贷</title>
      <link>https://cuihao.fun/post/house-loan/</link>
      <pubDate>Fri, 22 Jul 2022 16:56:52 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/house-loan/</guid>
      <description>作为利率6个点的人，答案毫无疑问，那贷款期限不变，减少月供或缩短贷款年限，月供不变，该如何选择？</description>
    </item>
    
    <item>
      <title>Blog更新汇总</title>
      <link>https://cuihao.fun/post/hugo-update/</link>
      <pubDate>Thu, 07 Jul 2022 07:48:44 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/hugo-update/</guid>
      <description>更新点滴</description>
    </item>
    
    <item>
      <title>日常使用技巧</title>
      <link>https://cuihao.fun/post/daily-use-skill/</link>
      <pubDate>Fri, 24 Jun 2022 00:22:20 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/daily-use-skill/</guid>
      <description>日常生活工作中，常用的一些软件技巧，记录备忘</description>
    </item>
    
    <item>
      <title>[译]Go数据结构</title>
      <link>https://cuihao.fun/post/go-data-structures/</link>
      <pubDate>Tue, 14 Jun 2022 18:44:59 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/go-data-structures/</guid>
      <description>在向新的程序员解释Go时，我发现解释Go的值在内存中是什么样子的，往往有助于建立正确的直觉，了解哪些操作是昂贵的，哪些是不昂贵的。—— Russ Cox</description>
    </item>
    
    <item>
      <title>[译]Go并发代码审查</title>
      <link>https://cuihao.fun/post/go%E5%B9%B6%E5%8F%91%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%A0%B8/</link>
      <pubDate>Sat, 11 Jun 2022 12:44:51 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/go%E5%B9%B6%E5%8F%91%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%A0%B8/</guid>
      <description>本页是对Go代码审查意见列表的补充。这个列表的目的是为了帮助在审查Go代码时发现与并发有关的bug。</description>
    </item>
    
    <item>
      <title>[译]Go代码审查意见</title>
      <link>https://cuihao.fun/post/go%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%A0%B8%E8%A7%A3%E9%87%8A/</link>
      <pubDate>Sat, 11 Jun 2022 09:49:33 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/go%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%A0%B8%E8%A7%A3%E9%87%8A/</guid>
      <description>本页收集了审查Go代码时的常见解释，以便于通过速记来参考单一的详细解释。这是一份常见错误的清单，而不是一份全面的风格指南。</description>
    </item>
    
    <item>
      <title>Go Build</title>
      <link>https://cuihao.fun/post/go-build/</link>
      <pubDate>Sun, 19 Dec 2021 23:16:12 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/go-build/</guid>
      <description>Go常利用此命令进行编译打包</description>
    </item>
    
    <item>
      <title>Go Timer</title>
      <link>https://cuihao.fun/post/go-timer/</link>
      <pubDate>Sat, 11 Dec 2021 21:59:22 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/go-timer/</guid>
      <description>定时器是经常使用的</description>
    </item>
    
    <item>
      <title>01 Matrix</title>
      <link>https://cuihao.fun/post/01-matrix/</link>
      <pubDate>Sun, 19 Apr 2020 19:40:53 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/01-matrix/</guid>
      <description>leetcode 542</description>
    </item>
    
    <item>
      <title>客户端拉取数据</title>
      <link>https://cuihao.fun/post/%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8B%89%E5%8F%96%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 05 Mar 2020 11:48:10 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8B%89%E5%8F%96%E6%95%B0%E6%8D%AE/</guid>
      <description>手机端需要不断得到服务端数据，暂定使用轮询的方式。 想到采用API接口的方式拉取数据，后台有push接口创建数据，客户端pull接口数据。 这样虽然实现简单，但是也</description>
    </item>
    
    <item>
      <title>20191201</title>
      <link>https://cuihao.fun/post/20191201/</link>
      <pubDate>Sun, 01 Dec 2019 19:05:30 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/20191201/</guid>
      <description>可能是我抗压能力体力啥的不够吧，最近一直9:00出门，晚上22:40到家，感觉好累啊，胸口发闷。可能是一直这种状态，太累人，今天出去打了羽毛球和乒乓球，感觉舒服</description>
    </item>
    
    <item>
      <title>配置文件热更新</title>
      <link>https://cuihao.fun/post/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%83%AD%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Tue, 24 Sep 2019 07:40:49 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%83%AD%E6%9B%B4%E6%96%B0/</guid>
      <description>想要使程序在不重启的前提下读取更新的配置文件，探索了以下几种方式： 信号量触发更新 API手动触发更新 监听文件触发更新 使用第三方包 一、信号量触发更新 对系统进程调用监</description>
    </item>
    
    <item>
      <title>2019年书单</title>
      <link>https://cuihao.fun/post/2019%E5%B9%B4%E4%B9%A6%E5%8D%95/</link>
      <pubDate>Sun, 19 May 2019 21:18:57 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/2019%E5%B9%B4%E4%B9%A6%E5%8D%95/</guid>
      <description>书名 作者 进度 《SQL查询的艺术》 张权 郭天娇 over 《程序是怎样跑起来的》 矢泽久雄 start 《算法图解》 巴尔加瓦 start 《编程之美》 《编程之美》小组 start 《网络是怎样连接的》 户根勤 over 《M</description>
    </item>
    
    <item>
      <title>BinaryTree的遍历</title>
      <link>https://cuihao.fun/post/binarytree%E7%9A%84%E9%81%8D%E5%8E%86/</link>
      <pubDate>Sun, 21 Apr 2019 19:35:37 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/binarytree%E7%9A%84%E9%81%8D%E5%8E%86/</guid>
      <description>在二叉树中有各种各样的遍历算法，下面然我们来看看它们是怎么实现的。 二叉树的结构： type TreeNode struct { Val int Left *TreeNode Right *TreeNode } 递归 前序遍历 func preorderTraversal(root *TreeNode) []int { var l []int if root == nil { return l } l = append(l, root.Val) l = append(l,</description>
    </item>
    
    <item>
      <title>树中两个节点的最低公共祖先</title>
      <link>https://cuihao.fun/post/%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link>
      <pubDate>Mon, 15 Apr 2019 07:45:14 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid>
      <description>在《剑指Offer》7.2 章中，面试案例：树中两个节点的最低公共祖先，记录了如下面试流程： 面试官：让我们做一个编程题目吧。输入树的两个节点，求他们的最低公共祖先</description>
    </item>
    
    <item>
      <title>Win10 Install Hugo</title>
      <link>https://cuihao.fun/post/win10-install-hugo/</link>
      <pubDate>Sun, 14 Apr 2019 10:47:50 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/win10-install-hugo/</guid>
      <description>install choco 打开PowerShell，粘贴下面的命令，回车。 Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;)) 参考链接 install hugo choco install hugo -confirm 参考链接</description>
    </item>
    
    <item>
      <title>2018年总结</title>
      <link>https://cuihao.fun/post/2018%E5%B9%B4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 05 Jan 2019 10:05:37 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/2018%E5%B9%B4%E6%80%BB%E7%BB%93/</guid>
      <description>2018年已经过去了，又到了一年一度的人类日常总结大会。我也拣在这一年中的一些事情陈述下，好在多年之后回头看，能回味这改变人生的一年。 回顾: 2018年春节过后的</description>
    </item>
    
    <item>
      <title>三向切分的快速排序</title>
      <link>https://cuihao.fun/post/%E4%B8%89%E5%90%91%E5%88%87%E5%88%86%E7%9A%84%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 23 Dec 2018 23:02:56 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E4%B8%89%E5%90%91%E5%88%87%E5%88%86%E7%9A%84%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid>
      <description>面试过程中，经常会遇到“快排”的这个题目，平时只是写出来了，但是一旦问到如何优化，就没有思路了。 今天看到《Algorithms Fourth Edition》中记录的“三向切</description>
    </item>
    
    <item>
      <title>找房记</title>
      <link>https://cuihao.fun/post/%E6%89%BE%E6%88%BF%E8%AE%B0/</link>
      <pubDate>Sun, 26 Aug 2018 22:26:36 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E6%89%BE%E6%88%BF%E8%AE%B0/</guid>
      <description>租房的日常，搬家的苦乐</description>
    </item>
    
    <item>
      <title>买房记</title>
      <link>https://cuihao.fun/post/%E4%B9%B0%E6%88%BF%E8%AE%B0/</link>
      <pubDate>Wed, 15 Aug 2018 00:02:39 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E4%B9%B0%E6%88%BF%E8%AE%B0/</guid>
      <description>普通人买房日常，稀里糊涂就买了，且行且看吧</description>
    </item>
    
    <item>
      <title>Go的位操作四则运算实现</title>
      <link>https://cuihao.fun/post/go%E7%9A%84%E4%BD%8D%E6%93%8D%E4%BD%9C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 02 Aug 2018 00:26:55 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/go%E7%9A%84%E4%BD%8D%E6%93%8D%E4%BD%9C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0/</guid>
      <description>package main import &amp;quot;fmt&amp;quot; func main() { a := 2 b := 2 fmt.Println(add(a, b)) fmt.Println(sub(a, b)) fmt.Println(mul(a, b)) fmt.Println(div(a, b)) } func add(a, b int) int { if b == 0 { return a } tmp := 0 for b != 0 { tmp = (a &amp;amp; b) &amp;lt;&amp;lt; 1 a = a ^ b b = tmp } return a } func addr(a, b int) int { if b == 0 { return a } tmp := (a</description>
    </item>
    
    <item>
      <title>19.remove Nth Node From End of List</title>
      <link>https://cuihao.fun/post/19.remove-nth-node-from-end-of-list/</link>
      <pubDate>Wed, 01 Aug 2018 22:53:23 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/19.remove-nth-node-from-end-of-list/</guid>
      <description>Leetcode地址 Github地址 题干 Given a linked list, remove the n-th node from the end of list and return its head. 给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。 Example: Given linked list: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, and n = 2. After removing the</description>
    </item>
    
    <item>
      <title>碎碎念</title>
      <link>https://cuihao.fun/post/%E7%A2%8E%E7%A2%8E%E5%BF%B5/</link>
      <pubDate>Mon, 30 Jul 2018 23:24:19 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E7%A2%8E%E7%A2%8E%E5%BF%B5/</guid>
      <description>Disqus 都支持哪些 HTML 标签呢？ &amp;lt;br&amp;gt; 换行， &amp;lt;p&amp;gt; 分段， &amp;lt;a&amp;gt; 写超链接， &amp;lt;blockquote&amp;gt; 引用别人的话， &amp;lt;s&amp;gt; 加删除线， &amp;lt;u&amp;gt; 加下划线， &amp;lt;strong&amp;gt; 加粗， &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt; 给代码加上高亮特技！</description>
    </item>
    
    <item>
      <title>Catch and Redirect Panic</title>
      <link>https://cuihao.fun/post/catch-and-redirect-panic/</link>
      <pubDate>Mon, 30 Jul 2018 22:11:59 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/catch-and-redirect-panic/</guid>
      <description>面试的时候，面试官问程序panic了该怎么办；那就recover呀；后来想了下是不是守护进程呀。 那panic之后一般log会随着后台log一起打印，这样就不方便</description>
    </item>
    
    <item>
      <title>Eric Raymond&#39;s 17 Unix Rules</title>
      <link>https://cuihao.fun/post/eric-raymonds-17-unix-rules/</link>
      <pubDate>Fri, 27 Jul 2018 01:04:33 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/eric-raymonds-17-unix-rules/</guid>
      <description>Eric Raymond’s 17 Unix Rules In his book The Art of Unix Programming that was first published in 2003,[11] Eric S. Raymond, an American programmer and open source advocate, summarizes the Unix philosophy as KISS Principle of &amp;ldquo;Keep it Simple, Stupid.&amp;quot;[12] He provides a series of design rules:[1] Rule of Modularity Developers should build a program out of simple parts connected by well defined interfaces, so problems are local, and parts of</description>
    </item>
    
    <item>
      <title>17.letter Combinations of a Phone Number</title>
      <link>https://cuihao.fun/post/17.letter-combinations-of-a-phone-number/</link>
      <pubDate>Thu, 26 Jul 2018 00:17:05 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/17.letter-combinations-of-a-phone-number/</guid>
      <description>题目 Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。 A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters. 给出数字到字母</description>
    </item>
    
    <item>
      <title>14 高性能数据库集群：读写分离</title>
      <link>https://cuihao.fun/post/14-%E9%AB%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E7%BE%A4%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</link>
      <pubDate>Mon, 23 Jul 2018 22:52:41 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/14-%E9%AB%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E7%BE%A4%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</guid>
      <description>&amp;ldquo;从0开始学架构&amp;quot;专栏已经更新了13期，从各个方面阐述了架构设计相关的理论和流程，包括架构设计起源、架构设计的目的、常见架构的复杂度分析、</description>
    </item>
    
    <item>
      <title>利用Privoxy设置终端http代理🚀</title>
      <link>https://cuihao.fun/post/%E5%88%A9%E7%94%A8privoxy%E8%AE%BE%E7%BD%AE%E7%BB%88%E7%AB%AFhttp%E4%BB%A3%E7%90%86/</link>
      <pubDate>Sun, 22 Jul 2018 19:10:51 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E5%88%A9%E7%94%A8privoxy%E8%AE%BE%E7%BD%AE%E7%BB%88%E7%AB%AFhttp%E4%BB%A3%E7%90%86/</guid>
      <description>使用 Privoxy 将sock5代理映射为http代理 1.安装Privoxy sudo apt-get update sudo apt-get install privoxy 2.配置Privoxy vim /etc/privoxy/config 查找 listen-address,注释掉(vim 查找 /listen-address) #listen-address 127.0.0.1:8118</description>
    </item>
    
    <item>
      <title>简单的利用shell部署代码💻</title>
      <link>https://cuihao.fun/post/%E7%AE%80%E5%8D%95%E7%9A%84%E5%88%A9%E7%94%A8shell%E9%83%A8%E7%BD%B2%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sun, 22 Jul 2018 18:22:23 +0800</pubDate>
      
      <guid>https://cuihao.fun/post/%E7%AE%80%E5%8D%95%E7%9A%84%E5%88%A9%E7%94%A8shell%E9%83%A8%E7%BD%B2%E4%BB%A3%E7%A0%81/</guid>
      <description>（一）介绍 公司现在开发、测试、运维渐渐地有规模了，因此各个环境也应该相对独立。开发提交代码到develop分支后，发布开发环境，查看修改效果，确认无误，然后提交</description>
    </item>
    
  </channel>
</rss>
