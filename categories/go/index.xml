<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on haoc7</title>
    <link>https://itcuihao.github.io/categories/go/</link>
    <description>Recent content in Go on haoc7</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <copyright>Copyright (c) 2018 -, haoc7; all rights reserved.</copyright>
    <lastBuildDate>Thu, 02 Aug 2018 00:26:55 +0800</lastBuildDate>
    
	<atom:link href="https://itcuihao.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go的位操作四则运算实现</title>
      <link>https://itcuihao.github.io/ports/go%E7%9A%84%E4%BD%8D%E6%93%8D%E4%BD%9C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 02 Aug 2018 00:26:55 +0800</pubDate>
      
      <guid>https://itcuihao.github.io/ports/go%E7%9A%84%E4%BD%8D%E6%93%8D%E4%BD%9C%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0/</guid>
      <description>package main import &amp;quot;fmt&amp;quot; func main() { a := 2 b := 2 fmt.Println(add(a, b)) fmt.Println(sub(a, b)) fmt.Println(mul(a, b)) fmt.Println(div(a, b)) } func add(a, b int) int { if b == 0 { return a } tmp := 0 for b != 0 { tmp = (a &amp;amp; b) &amp;lt;&amp;lt; 1 a = a ^ b b = tmp } return a } func addr(a, b int) int { if b == 0 { return a } tmp := (a</description>
    </item>
    
    <item>
      <title>Catch and Redirect Panic</title>
      <link>https://itcuihao.github.io/ports/catch-and-redirect-panic/</link>
      <pubDate>Mon, 30 Jul 2018 22:11:59 +0800</pubDate>
      
      <guid>https://itcuihao.github.io/ports/catch-and-redirect-panic/</guid>
      <description>面试的时候，面试官问程序panic了该怎么办；那就recover呀；后来想了下是不是守护进程呀。 那panic之后一般log会随着后台log一起打印，这样就不方便</description>
    </item>
    
  </channel>
</rss>